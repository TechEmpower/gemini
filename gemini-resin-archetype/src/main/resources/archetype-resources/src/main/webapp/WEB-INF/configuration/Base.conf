# -----------------------------------------------------------------------
# Configuration file
#
# BASELINE Configuration
#
# This configuration file specifies application default behavior that is
# suitable where not superseded by deployment-specific configuration
# files.  Refer to the separate deployment-specific configuration files
# (such as Dev.conf).
#
# The automatically-generated configuration files align with generic
# deployment "roles" (Development, Test, and Production).  It is common
# practice, however, to have additional machine-specific configuration
# files.  This allows for configuration attributes to be distributed
# between so that, for example, all development environments can use
# attributes specific in a Development configuration file.  For example:
#
#    Base.conf - Baseline configuration
#    Dev.conf - Standard development configuration specifics
#    BLACKPARK.conf - Specifics for a machine named Blackpark.
#
# -----------------------------------------------------------------------
#
# AUTO GENERATED CONFIGURATION FILE NOTICE:
#   Search for lines that contain "EDIT THIS" for AUTO-GENERATED items
#   that you can edit for additional functionality.
#
# Notes:
#   Lines that begin with # are comments.  Empty lines are ignored.  Each
#   entry in this file is described immediately above the provided value.
#
#   Any Windows-style paths must have back-slashes (\) escaped as \\ or
#   where possible use forward-slashes (/).
#
# -----------------------------------------------------------------------
#
# STANDARD PROPERTIES
#   Gemini provides the following standard properties dynamically at
#   runtime, derived from the deployment environment.

#   Servlet.MachineName - The discovered machine name of the server.
# -----------------------------------------------------------------------

# The "StaticsVersion" attribute, used in test and production to generate links
# to static assets that can be  cached forever.
StaticsVersion = ${project.version}

# -----------------------------------------------------------------------
# DEPLOYMENT SETTINGS
# -----------------------------------------------------------------------

# ApplicationRoot
#   Specifies the file system root of the application.  This value is
#   not actually used by Gemini, but is used as a macro in several
#   other property values.

ApplicationRoot = ${Servlet.ApplicationRoot}

# DeploymentDescription
#   A simple descriptive name or label for this deployment of the
#   application (e.g., Production, Test, Development, and so on).  This
#   description is used to identify the installation in some system-
#   generated messages such as exception report e-mails.

# TODO: EDIT THIS
DeploymentDescription = Unspecified

# -----------------------------------------------------------------------
# DATABASE SETTINGS
# -----------------------------------------------------------------------

# Connection information can be found in the separate deployment-
# specific configuration files.

# Postgres
db.Driver.Class = org.postgresql.Driver
db.Driver.UrlPrefix = jdbc:postgresql://

# db.Driver.Pooling
#   How many Connections to maintain to the database.  The default is 1.
# db.Driver.MaxPooling
#   How many concurrent Connections to allow at maximum.

db.Driver.Pooling = 5
db.Driver.MaxPooling = 30

# db.DisplayName
#   A human-readable identification for the database instance being
#   used by this connection pool.

db.DisplayName = App

# BasicConnectionListener properties

# cl.RetriesOnDisconnect
#   How many automatic retries on database connection (socket) failures
#   should be made before aborting a query attempt?

cl.RetriesOnDisconnect = 1

# cl.AlertFile
#   File to write database connector alerts to.

cl.AlertLogFile = ${ApplicationRoot}Logs/jdbc-alerts.log

# Enable database migrations
Initialization.DbMigrations.Enabled = yes

# -----------------------------------------------------------------------
# CLUSTER SETTINGS
# -----------------------------------------------------------------------

# The cluster settings are left commented here.  Gemini clustering can
# be enabled either (a) by defining cluster connectivity information here
# in a configuration file or (b) by having application instances fetch
# their configuration from the cluster master.  In case (b), this
# configuration file won't be used and there's no point in un-commenting
# and modifying the lines below.

#ClusterClient.TransportClassname = com.techempower.gemini.cluster.transport.kryonet.KryoClientTransport
#ClusterClient.Authentication.Key = shared-secret
#Kryo.Client.Host = localhost
#Kryo.Client.TcpPort = 54555


# -----------------------------------------------------------------------
# DIRECTORY SETTINGS
# -----------------------------------------------------------------------

# HTMLDirectory
#   Specifies the relative URL base for HTML files.  If HTML files are
#   served by a separate host, an asbolute URL base can be specified.

HTMLDirectory = /html/

# ImagesDirectory
#   Specifies the relative URL base for image files.  If images are
#   served by a separate host, an asbolute URL base can be specified.

ImageDirectory = /images/

# CSSDirectory
#   Specifies the relative URL base for style sheet files.  If CSS 
#   files are served by a separate host, an asbolute URL base can be
#   specified.

CSSDirectory = /css/

# JavaScriptDirectory
#   Specifies the relative URL base for JavaScript (.js) files.  If
#   JS files are served by a separate host, an asbolute URL base can be
#   specified.

JavaScriptDirectory = /js/


# -----------------------------------------------------------------------
# LOGGING SETTINGS
# -----------------------------------------------------------------------

# Log.File - Log file settings
# Log.File.On
#   Enables or disables logging to log files.
# Log.Console.On
#   Enables or disables logging to the console.

Log.File.On = yes
Log.Console.On = yes

# Log.File.LogDirectory
#   Specifies the directory to which logfiles should be written.  By
#   default this is just a subdirectory named "logs" off of whatever
#   is the active directory.  The directory must exist for the log files
#   to work.

Log.File.LogDirectory = ${ApplicationRoot}WEB-INF/Logs/Application-Logs/

# Log.File.LogDebugThreshold -and-
# Log.Console.LogDebugThreshold
#   Specify the minimum log level (0 to 100, inclusive) to require for
#   writing items to this log listener.
#
# 20 is recommended to start out.

Log.File.LogDebugThreshold = 20
Log.Console.LogDebugThreshold = 20


# -----------------------------------------------------------------------
# IP/DNS/URL SETTINGS
# -----------------------------------------------------------------------

# StandardDomain
#   Species the URL base for the standard (non-secure) domain name.
#   This should not end with a trailing /, which would otherwise be
#   standard practice.

# TODO: EDIT THIS
StandardDomain = http://${Servlet.MachineName}

# SecureDomain
#   Specifies the URL base for the secure (SSL) domain name.
#   This should not end with a trailing /, which would otherwise be
#   standard practice.

# TODO: EDIT THIS
SecureDomain = https://${Servlet.MachineName}


# -----------------------------------------------------------------------
# USER AUTHORIZATION
# -----------------------------------------------------------------------

# LoginHandler.LogoutDeletesCookie
#   Delete automatic login cookie after logout.

BasicSecurity.LogoutDeletesCookie = yes

# BasicSecurity.FailedAttemptLimit
#   Limits the number of sequential failed attempts before an IP address
#   cannot make any further login attempts (until a timeout period has
#   expired).

BasicSecurity.FailedAttemptLimit = 25

# BasicSecurity.FailedResetSeconds
#   An interval of time after which an IP address that had been blocked
#   will be permitted to login again.

BasicSecurity.FailedResetSeconds = 60

# PasswordReset.FromAddress
#   The e-mail address to use as an author when sending password reset
#   tickets to users.

PasswordReset.FromAddress = ${FromEmailAddress}


# -----------------------------------------------------------------------
# GEMINI ADMIN SETTINGS
# -----------------------------------------------------------------------

#TemplatePath
#    The location of the template files to use for the gemini-provided 
#    admin page (see GeminiAdminHandler
GeminiAdmin.TemplatePath = /geminiadmin/


# -----------------------------------------------------------------------
# MAIL SETTINGS
# -----------------------------------------------------------------------

# AdministratorEmail
#   The main application administrator's e-mail address.

AdministratorEmail = noone@example.com

# ApplicationEmail
#   An e-mail address used by the application to send e-mails.

ApplicationEmail = noone@example.com

# MailServerCount
#   The number of mail servers to use in fail-over.  If no fail-over is
#   used, this should be 1.

MailServerCount = 0

# Mail Server blocks (where 'X' is a sequential ID of the mail servers
# used by the application).
#
# MailServerX.ServerAddress
#   Specify each mail server's DNS name or IP address.  Make sure the
#   mail server will relay e-mail for this application.
# MailServerX.SmtpPort
#   Specify an SMTP port number if used for Outbound mail.
# MailServerX.PopPort
#   Specify a POP3 port number if used for Inbound mail.
# MailServerX.Username
#   Used if an SMTP username is required to send or receive mail
# MailServerX.Password
#   The password for the user specified above
# MailServerX.Role
#   Outbound, Inbound, or Both
#
# No mail servers specified in baseline configuration.  See environment-
# specific configuration files.

# FromEmailAddress
#   The e-mail address to use as an "author" when sending e-mails.

FromEmailAddress = ${ApplicationEmail}


# -----------------------------------------------------------------------
# ERROR HANDLING SETTINGS
# -----------------------------------------------------------------------

# Should exceptions caught by the Gemini infrastructure while handling
# web requests be written to the log file?

BasicExceptionHandler.LogExceptions = yes
BasicExceptionHandler.LogStackTraces = yes

# Should the stack trace of exceptions caught by the Gemini
# Infrastructure be clearly visible to users?  This is generally
# acceptable only in a development environment.  In a Production
# environment, set this value to 'no'.  Stack traces will still be
# visible within the HTML source sent to the client.

BasicExceptionHandler.RevealStackTrace = no

# BasicExceptionHandler.ErrorTemplate
#   Specifies the filename of the error template that should be rendered
#   to display an exception.  If empty, the internal "page" will be
#   used.

BasicExceptionHandler.ErrorTemplate = exception/exception.mustache

# EmailNotificationListener.FromAddress
#   An e-mail address for the EmailNotificationListener to use in sending
#   notification emails to the recipients.

EmailNotificationListener.FromAddress = ${ApplicationEmail}

# EmailNotificationListener.Recipient blocks
#   Each of these numbered blocks represents a recipient for
#   administrative notifications from the application.  The Sources
#   is a comma-delimited list of notification sources (e.g., exception,
#   monitor, application).  The MinSeverity is a minimum threshold for
#   the notification severity (LOW, MEDIUM, or HIGH).  Omit the
#   "Sources" setting to receive notifications from all sources.

EmailNotificationListener.Recipient1.Email = ${AdministratorEmail}
#EmailNotificationListener.Recipient1.Sources = exception,monitor,application
EmailNotificationListener.Recipient1.MinSeverity = LOW


# -----------------------------------------------------------------------
# MISCELLANEOUS SETTINGS
# -----------------------------------------------------------------------

# Character encoding settings
#
# Encoding.RequestCharset
#   What character encoding are we expecting for requests?
# Encoding.ResponseType
#   The full MIME-Type name for responses.

Encoding.RequestCharset = UTF-8
Encoding.ResponseType = text/html;charset=utf-8

# RequestCounting
#   Specifies that requests should be counted and that threads
#   processing requests should be assigned names that include the
#   request ID number for the scope of the request.

RequestCounting = yes

# SchedulerSleepSeconds
#   Seconds to sleep between scheduler checks.

SchedulerSleepSeconds = 10

# SessionTimeout
#   Sets the number of seconds before a session should time out on
#   the web site.

SessionTimeout = 3600

# SessionTracking
#   If enabled, sessions will be tracked.  This allows the application
#   to get a count of active sessions.

SessionTracking = Yes

# ThreadDump.DumpOnStopLocation
#   Specifies a file system location to write thread dump text files
#   when the application is unloaded by the application server (such
#   as when the server stops).

ThreadDump.DumpOnStopLocation = ${ApplicationRoot}Thread Dumps/

# Robots.File
#   Specifies the file that should be returned when /robots.txt is 
#   requested.  See com.techempower.gemini.seo.RobotsHandler.

Robots.File = ${Servlet.WebInf}/robots-disallowed.txt

Mustache.Directory = ${ApplicationRoot}WEB-INF/mustache
Mustache.Enabled = no
